<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.robert.util</groupId>
	<artifactId>util-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>util-parent</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<argLine>-Dfile.encoding=UTF-8</argLine>
		<spring.version>4.1.4.RELEASE</spring.version>
		<slf4j.version>1.6.4</slf4j.version>
		<hibernate.version>4.3.8.Final</hibernate.version>
		<project.version>0.0.1-SNAPSHOT</project.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- 添加JUnit测试依赖 -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.10</version>
				<scope>test</scope>
			</dependency>

			<!-- 数据库测试 -->
			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>2.5.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.robert.util</groupId>
				<artifactId>dbunit-util</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<scope>test</scope>
			</dependency>

			<!-- spring测试依赖 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- 测试框架之mock框架esay-mock -->
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>3.1</version>
				<scope>test</scope>
			</dependency>

			<!-- hibernate依赖 -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<!-- 数据库驱动 -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.19</version>
				<scope>test</scope>
			</dependency>

			<!-- 数据源之c3p0 -->
			<dependency>
				<groupId>com.mchange</groupId>
				<artifactId>c3p0</artifactId>
				<version>0.9.2.1</version>
				<scope>test</scope>
			</dependency>

			<!-- spring依赖 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- @Inject注解 -->
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>4.0</version>
			</dependency>
			<!-- spring AOP编程的依赖 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.6.11</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>1.6.11</version>
			</dependency>
			<!-- 帮助工具（数组） -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.4</version>
			</dependency>

			<!-- 日志 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-nop</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.6.1</version>
			</dependency>

			<!-- orm工具之mybatis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>3.3.0</version>
			</dependency>

			<!-- servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.0.1</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- jdk编译插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.0.2</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!-- maven的测试插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit4</artifactId>
							<version>2.18.1</version>
						</dependency>
					</dependencies>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>sql-maven-plugin</artifactId>
										<versionRange>[1.5,)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<!-- 数据库插件 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sql-maven-plugin</artifactId>
					<version>1.5</version>

					<dependencies>
						<!-- specify the dependent jdbc driver here -->
						<dependency>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>5.1.19</version>
						</dependency>
					</dependencies>

					<!-- common configuration shared by all executions -->
					<configuration>
						<driver>com.mysql.jdbc.Driver</driver>
						<url>jdbc:mysql://10.203.138.231:3306/test</url>
						<username>root</username>
						<password>root</password>
						<!-- You can comment out username/password configurations and have 
							maven to look them up in your settings.xml using ${settingsKey} -->
						<!-- <settingsKey>sensibleKey</settingsKey> -->
						<!--all executions are ignored if -Dmaven.test.skip=true -->
						<!--<skip>${maven.test.skip}</skip> -->
					</configuration>

					<executions>
						<execution>
							<id>drop-db-before-test-if-any</id>
							<!-- 绑定阶段 -->
							<phase>generate-sources</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<!-- need another database to drop the targeted one -->
								<url>jdbc:mysql://10.203.138.231:3306/test</url>
								<autocommit>true</autocommit>
								<sqlCommand>drop database util_test</sqlCommand>
								<!-- ignore error when database is not avaiable -->
								<onError>continue</onError>
								<echo>**************drop database***********</echo>
							</configuration>
						</execution>

						<execution>
							<id>create-db</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<url>jdbc:mysql://10.203.138.231:3306/test</url>
								<!-- no transaction -->
								<autocommit>true</autocommit>
								<sqlCommand>create database util_test</sqlCommand>
							</configuration>
						</execution>

						<execution>
							<id>create-schema</id>
							<phase>process-test-resources</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<url>jdbc:mysql://10.203.138.231:3306/util_test</url>
								<autocommit>true</autocommit>
								<srcFiles>
									<srcFile>src/test/resources/create_schema.sql</srcFile>
								</srcFiles>
							</configuration>
						</execution>

						<!-- <execution> <id>create-data</id> <phase>process-test-resources</phase> 
							<goals> <goal>execute</goal> </goals> <configuration> <orderFile>ascending</orderFile> 
							<fileset> <basedir>${basedir}</basedir> <includes> <include>src/test/resources/test-data.sql</include> 
							</includes> </fileset> </configuration> </execution> -->
						<!-- drop db after test -->
						<execution>
							<id>drop-db-after-test</id>
							<phase>test</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<autocommit>true</autocommit>
								<sqlCommand>drop database util_test</sqlCommand>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.4</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<modules>
		<module>../util-hibernate</module>
	</modules>
</project>